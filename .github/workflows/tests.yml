name: Pre-Deployment Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov requests-mock
    
    - name: Set up test environment
      run: |
        mkdir -p data/models
        mkdir -p data/raw
        # Create dummy data for testing
        python -c "
        import pandas as pd
        import numpy as np
        
        # Create dummy ML dataset
        dummy_data = pd.DataFrame({
            'team': ['Indiana', 'Ohio State', 'Michigan'] * 2,
            'year': [2023, 2023, 2023, 2024, 2024, 2024],
            'conference': ['B1G', 'B1G', 'B1G'] * 2,
            'win_percentage': [0.8, 0.9, 0.7, 0.85, 0.95, 0.75],
            'yards_per_game': [400, 450, 350, 420, 480, 380],
            'yards_allowed_per_game': [300, 250, 320, 280, 240, 310],
            'turnover_margin': [5, 10, 2, 8, 12, 3]
        })
        dummy_data.to_csv('data/models/ncaa_football_ml_dataset.csv', index=False)
        
        # Create dummy predictions
        dummy_predictions = pd.DataFrame({
            'team': ['Indiana', 'Ohio State', 'Michigan'],
            'top_25_probability': [0.8, 0.95, 0.7],
            'performance_rank': [15, 3, 20]
        })
        dummy_predictions.to_csv('data/models/2025_predictions.csv', index=False)
        "
    
    - name: Run data quality tests
      run: |
        python -m pytest tests/test_data_quality.py -v --tb=short
    
    - name: Run API connection tests
      run: |
        python -m pytest tests/test_api_connections.py -v --tb=short
    
    - name: Run ML model tests
      run: |
        python -m pytest tests/test_ml_models.py -v --tb=short
    
    - name: Run integration tests
      run: |
        python -m pytest tests/test_integration.py -v --tb=short
    
    - name: Run all tests with coverage
      run: |
        python -m pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
